/*
 * kelas utama merupakan tampilan awal dimana program berjalan
 * beisi menu dan view dari pencarian
 * 
 */
package id.web.candra.kamus.ui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import id.web.candra.kamus.db.DBConnection;
import id.web.candra.kamus.db.Kamus;
import id.web.candra.kamus.db.KamusDAO;
import id.web.candra.kamus.db.ImportExport;
import javax.swing.JFileChooser;

/**
 *
 * @author candra
 */
public class MainFrm extends javax.swing.JFrame {

    private List<Kamus> records = new ArrayList<Kamus>();

    /** Creates new form MainFrm */
    public MainFrm() {
        initComponents();
        Toolkit toolkit = getToolkit();
        //  mnTool.setEnabled(false);
        // mnData.setEnabled(false);
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2,
                size.height / 2 - getHeight() / 2);
        ie = new ImportExport();
        jf = new JFileChooser();


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDialog3 = new javax.swing.JDialog();
        jDialog4 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        cariTextField = new javax.swing.JTextField();
        cariButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        kamusScrollPane = new javax.swing.JScrollPane();
        kamusTable = new javax.swing.JTable();
        mainMenu = new javax.swing.JMenuBar();
        MnFile = new javax.swing.JMenu();
        mnLogin = new javax.swing.JMenuItem();
        mnLogout = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        mnData = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        mnTool = new javax.swing.JMenu();
        mnExport = new javax.swing.JMenuItem();
        mnImport = new javax.swing.JMenuItem();
        mnClear = new javax.swing.JMenuItem();

        jButton1.setText("clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        clearBtn.setText("clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("KoreaApp");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Pencarian"));

        cariTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariTextFieldcariNamaDosenTextFieldActionPerformed(evt);
            }
        });

        cariButton.setText("cari");
        cariButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariButtoncariButtonActionPerformed(evt);
            }
        });

        jButton2.setText("clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cariTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(cariButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cariButton)
                .addComponent(cariTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton2))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabel Data Kamus"));

        kamusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Korea", "Spelling", "Indonesia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        kamusScrollPane.setViewportView(kamusTable);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(kamusScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kamusScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        MnFile.setText("File");

        mnLogin.setText("Login");
        mnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnLoginActionPerformed(evt);
            }
        });
        MnFile.add(mnLogin);

        mnLogout.setText("Logout");
        mnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnLogoutActionPerformed(evt);
            }
        });
        MnFile.add(mnLogout);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        MnFile.add(jMenuItem2);

        mainMenu.add(MnFile);

        mnData.setText("Master Data");
        mnData.setEnabled(false);
        mnData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDataActionPerformed(evt);
            }
        });

        jMenuItem3.setText("Kamus");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        mnData.add(jMenuItem3);

        mainMenu.add(mnData);

        mnTool.setText("Tool");
        mnTool.setEnabled(false);

        mnExport.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        mnExport.setText("Export...");
        mnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnExportActionPerformed(evt);
            }
        });
        mnTool.add(mnExport);

        mnImport.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        mnImport.setText("Import ...");
        mnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnImportActionPerformed(evt);
            }
        });
        mnTool.add(mnImport);

        mnClear.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        mnClear.setText("Clear kamus");
        mnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnClearActionPerformed(evt);
            }
        });
        mnTool.add(mnClear);

        mainMenu.add(mnTool);

        setJMenuBar(mainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private boolean okToReplace() {
        return (JOptionPane.showConfirmDialog(this,
                "File " + file.getName() + " Sudah ada\n"
                + "Akan ditimpa ?",
                "Peringatan", JOptionPane.YES_NO_OPTION) == 0);
    }
    private void mnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnExportActionPerformed
        // TODO add your handling code here:
        if (jf.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            file = jf.getSelectedFile();
            System.out.println(file.getAbsolutePath().toString());
            if (!file.exists() || okToReplace()) {
                DBConnection conn = DBConnection.getInstance();
                boolean status1 = false;
                try {
                    status1 = ie.exportData(conn.getConnection(), file.getAbsolutePath().toString());
                } catch (SQLException ex) {
                    Logger.getLogger(MainFrm.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (status1) {
                    JOptionPane.showMessageDialog(null, "Data berhasil di Export");
                } else {
                    JOptionPane.showMessageDialog(null, "Data Gagal di Export");
                }
            }
        }

    }//GEN-LAST:event_mnExportActionPerformed
    private void setFillTable() {
        Object data[][] = new Object[records.size()][3];
        int x = 0;
        for (Kamus k: records) {
            //  data[x][0] = k.getNo();
            data[x][0] = k.getKorea();
            System.out.println(data[x][0]);
            data[x][1] = k.getLafal();
            System.out.println(data[x][1]);
            data[x][2] = k.getIndonesia();
            System.out.println(data[x][2]);

            ++x;
        }
        String[] judul = {"Korea", "Spelling", "Indonesia"};

        kamusTable.setModel(new DefaultTableModel(data, judul));
        kamusScrollPane.setViewportView(kamusTable);
    }
    private void cariTextFieldcariNamaDosenTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariTextFieldcariNamaDosenTextFieldActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_cariTextFieldcariNamaDosenTextFieldActionPerformed
    //untuk pencarian

    private void setClearTable() {
        kamusTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{{null, null, null}},
                new String[]{"Korea", "Spelling", "Indonesia"}));
    }

    private void loadRecords(int kategori, String text) {
        try {
            DBConnection conn = DBConnection.getInstance();
            KamusDAO dao = new KamusDAO(conn.getConnection());
            if (kategori == 0) {
                records = dao.selectAllByIndonesian(text);
            } else {
                records = dao.selectAll();
            }
            this.setFillTable();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error : " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void cariButtoncariButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariButtoncariButtonActionPerformed
        if (!cariTextField.getText().isEmpty()) {
            loadRecords(0, cariTextField.getText());
        }
}//GEN-LAST:event_cariButtoncariButtonActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:o

        int status = JOptionPane.showConfirmDialog(null, "Yakin ingin keluar?", "KoreaApp",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (status == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void mnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnLoginActionPerformed
//         new frmLogin(new javax.swing.JFrame(), true).setVisible(true);
        LoginDialog dlg = new LoginDialog(this, true);
        dlg.setVisible(true);
//        if(dlg.Loged()) {
        mnData.setEnabled(dlg.stat);
        mnTool.setEnabled(dlg.stat);
       // mnLogin.setEnabled(dlg.stat);


//        }
    }//GEN-LAST:event_mnLoginActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        cariTextField.setText("");
        setClearTable();

    }//GEN-LAST:event_clearBtnActionPerformed

    private void mnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnClearActionPerformed
        // TODO add your handling code here:
        DBConnection conn = DBConnection.getInstance();
        int status = JOptionPane.showConfirmDialog(null, "Yakin ingin Menghapus data?", "KoreaApp",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (status == JOptionPane.YES_OPTION) {


            boolean status1 = false;
            try {
                status1 = ie.emptyData(conn.getConnection());
            } catch (SQLException ex) {
                Logger.getLogger(MainFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (status1) {
                JOptionPane.showMessageDialog(null, "Data berhasil di kosonkan");
            } else {
                JOptionPane.showMessageDialog(null, "Data Gagal di kosongkan");
            }
        }

    }//GEN-LAST:event_mnClearActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        cariTextField.setText("");
        setClearTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void mnDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDataActionPerformed
        // TODO add your handling code here:s
    }//GEN-LAST:event_mnDataActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed


        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MasterData().setVisible(true);
            }
        });

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void mnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnImportActionPerformed
        DBConnection conn = DBConnection.getInstance();
        if (jf.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            file = jf.getSelectedFile();
            System.out.println(file.getAbsolutePath().toString());
            boolean status1 = false;
            try {
                status1 = ie.importData(conn.getConnection(), file.getAbsolutePath().toString());
            } catch (SQLException ex) {
                //    Logger.getLogger(MainFrm.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println(ex);
            }
            if (status1) {
                JOptionPane.showMessageDialog(null, "Data berhasil di Import");
            } else {
                JOptionPane.showMessageDialog(null, "Data Gagal di Import");
            }

        }        // TODO add your handling code here:
    }//GEN-LAST:event_mnImportActionPerformed

    private void mnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnLogoutActionPerformed
        // TODO add your handling code here:
        mnData.setEnabled(false);
        mnTool.setEnabled(false);
     //   mnLogout.setEnabled(false);
       // mnLogin.setEnabled(true);

    }//GEN-LAST:event_mnLogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                MainFrm frm = new MainFrm();
                frm.setVisible(true);
                frm.setSize(600, 500);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MnFile;
    private javax.swing.JButton cariButton;
    private javax.swing.JTextField cariTextField;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane kamusScrollPane;
    private javax.swing.JTable kamusTable;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JMenuItem mnClear;
    private javax.swing.JMenu mnData;
    private javax.swing.JMenuItem mnExport;
    private javax.swing.JMenuItem mnImport;
    private javax.swing.JMenuItem mnLogin;
    private javax.swing.JMenuItem mnLogout;
    private javax.swing.JMenu mnTool;
    // End of variables declaration//GEN-END:variables
    ImportExport ie;
    JFileChooser jf;
    File file;
    // StatusLogin st;
}
